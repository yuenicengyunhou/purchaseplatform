// Generated by view binder compiler. Do not edit!
package com.rails.purchaseplatform.user.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.rails.purchaseplatform.user.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserLoginBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView btnLogin;

  @NonNull
  public final CheckBox cbVisit;

  @NonNull
  public final EditText etPaw;

  @NonNull
  public final EditText etPhone;

  @NonNull
  public final TextView tvXy;

  @NonNull
  public final TextView tvYs;

  private ActivityUserLoginBinding(@NonNull RelativeLayout rootView, @NonNull TextView btnLogin,
      @NonNull CheckBox cbVisit, @NonNull EditText etPaw, @NonNull EditText etPhone,
      @NonNull TextView tvXy, @NonNull TextView tvYs) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.cbVisit = cbVisit;
    this.etPaw = etPaw;
    this.etPhone = etPhone;
    this.tvXy = tvXy;
    this.tvYs = tvYs;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_login;
      TextView btnLogin = rootView.findViewById(id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.cb_visit;
      CheckBox cbVisit = rootView.findViewById(id);
      if (cbVisit == null) {
        break missingId;
      }

      id = R.id.et_paw;
      EditText etPaw = rootView.findViewById(id);
      if (etPaw == null) {
        break missingId;
      }

      id = R.id.et_phone;
      EditText etPhone = rootView.findViewById(id);
      if (etPhone == null) {
        break missingId;
      }

      id = R.id.tv_xy;
      TextView tvXy = rootView.findViewById(id);
      if (tvXy == null) {
        break missingId;
      }

      id = R.id.tv_ys;
      TextView tvYs = rootView.findViewById(id);
      if (tvYs == null) {
        break missingId;
      }

      return new ActivityUserLoginBinding((RelativeLayout) rootView, btnLogin, cbVisit, etPaw,
          etPhone, tvXy, tvYs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
