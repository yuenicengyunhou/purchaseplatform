// Generated by view binder compiler. Do not edit!
package com.rails.purchaseplatform.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.rails.purchaseplatform.R;
import com.rails.purchaseplatform.common.widget.BaseRecyclerView;
import com.rails.purchaseplatform.common.widget.BaseSwipeLayout;
import com.rails.purchaseplatform.common.widget.EmptyView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAutionBinding implements ViewBinding {
  @NonNull
  private final BaseSwipeLayout rootView;

  @NonNull
  public final EmptyView emptyView;

  @NonNull
  public final View line;

  @NonNull
  public final BaseRecyclerView recycler;

  @NonNull
  public final BaseSwipeLayout swipe;

  private FragmentAutionBinding(@NonNull BaseSwipeLayout rootView, @NonNull EmptyView emptyView,
      @NonNull View line, @NonNull BaseRecyclerView recycler, @NonNull BaseSwipeLayout swipe) {
    this.rootView = rootView;
    this.emptyView = emptyView;
    this.line = line;
    this.recycler = recycler;
    this.swipe = swipe;
  }

  @Override
  @NonNull
  public BaseSwipeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAutionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAutionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_aution, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAutionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_view;
      EmptyView emptyView = rootView.findViewById(id);
      if (emptyView == null) {
        break missingId;
      }

      id = R.id.line;
      View line = rootView.findViewById(id);
      if (line == null) {
        break missingId;
      }

      id = R.id.recycler;
      BaseRecyclerView recycler = rootView.findViewById(id);
      if (recycler == null) {
        break missingId;
      }

      BaseSwipeLayout swipe = (BaseSwipeLayout) rootView;

      return new FragmentAutionBinding((BaseSwipeLayout) rootView, emptyView, line, recycler,
          swipe);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
