// Generated by view binder compiler. Do not edit!
package com.rails.purchaseplatform.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.rails.purchaseplatform.R;
import com.rails.purchaseplatform.common.widget.BaseRecyclerView;
import com.rails.purchaseplatform.common.widget.BaseSwipeLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.lucode.hackware.magicindicator.MagicIndicator;

public final class FrmIndexBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final AppBarLayout bar;

  @NonNull
  public final CollapsingToolbarLayout collapsing;

  @NonNull
  public final TextView etSearch;

  @NonNull
  public final View lineBar;

  @NonNull
  public final LinearLayout llBar;

  @NonNull
  public final MagicIndicator magicIndicator;

  @NonNull
  public final BaseSwipeLayout rlRecycler;

  @NonNull
  public final BaseRecyclerView rvStep;

  @NonNull
  public final ViewPager viewPager;

  private FrmIndexBinding(@NonNull FrameLayout rootView, @NonNull AppBarLayout bar,
      @NonNull CollapsingToolbarLayout collapsing, @NonNull TextView etSearch,
      @NonNull View lineBar, @NonNull LinearLayout llBar, @NonNull MagicIndicator magicIndicator,
      @NonNull BaseSwipeLayout rlRecycler, @NonNull BaseRecyclerView rvStep,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.bar = bar;
    this.collapsing = collapsing;
    this.etSearch = etSearch;
    this.lineBar = lineBar;
    this.llBar = llBar;
    this.magicIndicator = magicIndicator;
    this.rlRecycler = rlRecycler;
    this.rvStep = rvStep;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FrmIndexBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FrmIndexBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.frm_index, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FrmIndexBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bar;
      AppBarLayout bar = rootView.findViewById(id);
      if (bar == null) {
        break missingId;
      }

      id = R.id.collapsing;
      CollapsingToolbarLayout collapsing = rootView.findViewById(id);
      if (collapsing == null) {
        break missingId;
      }

      id = R.id.et_search;
      TextView etSearch = rootView.findViewById(id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.line_bar;
      View lineBar = rootView.findViewById(id);
      if (lineBar == null) {
        break missingId;
      }

      id = R.id.ll_bar;
      LinearLayout llBar = rootView.findViewById(id);
      if (llBar == null) {
        break missingId;
      }

      id = R.id.magic_indicator;
      MagicIndicator magicIndicator = rootView.findViewById(id);
      if (magicIndicator == null) {
        break missingId;
      }

      id = R.id.rl_recycler;
      BaseSwipeLayout rlRecycler = rootView.findViewById(id);
      if (rlRecycler == null) {
        break missingId;
      }

      id = R.id.rv_step;
      BaseRecyclerView rvStep = rootView.findViewById(id);
      if (rvStep == null) {
        break missingId;
      }

      id = R.id.view_pager;
      ViewPager viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      return new FrmIndexBinding((FrameLayout) rootView, bar, collapsing, etSearch, lineBar, llBar,
          magicIndicator, rlRecycler, rvStep, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
