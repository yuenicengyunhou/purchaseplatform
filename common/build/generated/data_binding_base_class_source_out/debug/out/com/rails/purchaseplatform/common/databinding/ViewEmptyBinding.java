// Generated by view binder compiler. Do not edit!
package com.rails.purchaseplatform.common.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.rails.purchaseplatform.common.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewEmptyBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView btnEmpty;

  @NonNull
  public final TextView btnUnEmpty;

  @NonNull
  public final FrameLayout flEmpty;

  @NonNull
  public final ImageView imgEmpty;

  @NonNull
  public final LinearLayout llEmpty;

  @NonNull
  public final TextView tvContentEmpty;

  @NonNull
  public final TextView tvDesc;

  private ViewEmptyBinding(@NonNull FrameLayout rootView, @NonNull TextView btnEmpty,
      @NonNull TextView btnUnEmpty, @NonNull FrameLayout flEmpty, @NonNull ImageView imgEmpty,
      @NonNull LinearLayout llEmpty, @NonNull TextView tvContentEmpty, @NonNull TextView tvDesc) {
    this.rootView = rootView;
    this.btnEmpty = btnEmpty;
    this.btnUnEmpty = btnUnEmpty;
    this.flEmpty = flEmpty;
    this.imgEmpty = imgEmpty;
    this.llEmpty = llEmpty;
    this.tvContentEmpty = tvContentEmpty;
    this.tvDesc = tvDesc;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewEmptyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewEmptyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_empty, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewEmptyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_empty;
      TextView btnEmpty = rootView.findViewById(id);
      if (btnEmpty == null) {
        break missingId;
      }

      id = R.id.btn_un_empty;
      TextView btnUnEmpty = rootView.findViewById(id);
      if (btnUnEmpty == null) {
        break missingId;
      }

      FrameLayout flEmpty = (FrameLayout) rootView;

      id = R.id.img_empty;
      ImageView imgEmpty = rootView.findViewById(id);
      if (imgEmpty == null) {
        break missingId;
      }

      id = R.id.ll_empty;
      LinearLayout llEmpty = rootView.findViewById(id);
      if (llEmpty == null) {
        break missingId;
      }

      id = R.id.tv_content_empty;
      TextView tvContentEmpty = rootView.findViewById(id);
      if (tvContentEmpty == null) {
        break missingId;
      }

      id = R.id.tv_desc;
      TextView tvDesc = rootView.findViewById(id);
      if (tvDesc == null) {
        break missingId;
      }

      return new ViewEmptyBinding((FrameLayout) rootView, btnEmpty, btnUnEmpty, flEmpty, imgEmpty,
          llEmpty, tvContentEmpty, tvDesc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
