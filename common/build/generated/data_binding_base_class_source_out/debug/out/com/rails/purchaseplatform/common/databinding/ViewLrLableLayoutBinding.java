// Generated by view binder compiler. Do not edit!
package com.rails.purchaseplatform.common.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.rails.purchaseplatform.common.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewLrLableLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView etValue;

  @NonNull
  public final ImageView imgLeft;

  @NonNull
  public final ImageView imgRight;

  @NonNull
  public final View line;

  @NonNull
  public final TextView tvKey;

  private ViewLrLableLayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView etValue,
      @NonNull ImageView imgLeft, @NonNull ImageView imgRight, @NonNull View line,
      @NonNull TextView tvKey) {
    this.rootView = rootView;
    this.etValue = etValue;
    this.imgLeft = imgLeft;
    this.imgRight = imgRight;
    this.line = line;
    this.tvKey = tvKey;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewLrLableLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewLrLableLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_lr_lable_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewLrLableLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_value;
      TextView etValue = rootView.findViewById(id);
      if (etValue == null) {
        break missingId;
      }

      id = R.id.img_left;
      ImageView imgLeft = rootView.findViewById(id);
      if (imgLeft == null) {
        break missingId;
      }

      id = R.id.img_right;
      ImageView imgRight = rootView.findViewById(id);
      if (imgRight == null) {
        break missingId;
      }

      id = R.id.line;
      View line = rootView.findViewById(id);
      if (line == null) {
        break missingId;
      }

      id = R.id.tv_key;
      TextView tvKey = rootView.findViewById(id);
      if (tvKey == null) {
        break missingId;
      }

      return new ViewLrLableLayoutBinding((LinearLayout) rootView, etValue, imgLeft, imgRight, line,
          tvKey);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
